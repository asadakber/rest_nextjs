{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport default async function handle(req, res) {\n  const result = await prisma.user.create({\n    data: _objectSpread({}, req.body)\n  });\n  res.json(result);\n}","map":{"version":3,"sources":["E:/Projects/Prisma/SQLLITE/JAVASCRIPT/demo_app/pages/api/user.js"],"names":["PrismaClient","prisma","handle","req","res","result","user","create","data","body","json"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,eAAe,eAAeE,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC3C,QAAMC,MAAM,GAAG,MAAMJ,MAAM,CAACK,IAAP,CAAYC,MAAZ,CAAmB;AACpCC,IAAAA,IAAI,oBACGL,GAAG,CAACM,IADP;AADgC,GAAnB,CAArB;AAKAL,EAAAA,GAAG,CAACM,IAAJ,CAASL,MAAT;AACH","sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport default async function handle(req, res) {\r\n    const result = await prisma.user.create({\r\n        data: {\r\n            ...req.body\r\n        }\r\n    })\r\n    res.json(result)\r\n}"]},"metadata":{},"sourceType":"module"}